(()=>{"use strict";const t=function(t){let e=document.createElement(t.tag);if("attr"in t){let s=t.attr;for(let[t,a]of Object.entries(s))e.setAttribute(t,a)}return null!=t.classList&&e.classList.add(...t.classList),"text"in t&&(e.textContent=t.text),e},e=function(){let e=t({tag:"div",classList:["nav-bar"]});return e.append(t({tag:"i",classList:["fa","fa-tasks","fa-3x"],attr:{"aria-hidden":"true"}}),t({tag:"div",classList:["nav-heading"],text:"To-Do"}),t({tag:"div",classList:["nav-side"],text:"Tasks and Notes"})),e},s=function(){let e=t({tag:"div",classList:["side-bar"]});return e.append(a("home","Home"),a("briefcase","Projects"),a("sticky-note","Notes")),e},a=function(e,s){let a=t({tag:"div",attr:{id:s.toLowerCase()},classList:["side-item"]});return a.append(t({tag:"i",classList:["fa",`fa-${e}`],attr:{"aria-hidden":"true"}}),t({tag:"span",text:s})),a},n=function(){const e=document.querySelectorAll(".side-item");let s=document.querySelector("#home");s.classList.add("selected"),e.forEach((e=>{e.addEventListener("click",(a=>{e!==s&&("projects"!=e.id&&(s.classList.remove("selected"),e.classList.add("selected"),s=e),function(e){const s=document.querySelector("#container");"projects"===e&&(s.appendChild(function(){const e=t({tag:"div",text:"Create New Project",classList:["p-form-heading"]}),s=t({tag:"input",attr:{type:"text",placeholder:"Project Name",required:""},classList:["p-form-text"]}),a=t({tag:"div",classList:["p-form-buttons"]}),n=t({tag:"button",attr:{type:"button"},text:"Cancel",classList:["cancel-btn"]}),i=t({tag:"button",text:"Okay",attr:{type:"submit",form:"p-form"},classList:["submit-btn"]});n.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),a.append(n,i);const c=t({tag:"form",attr:{id:"p-form"},classList:["project-form"]});c.append(e,s,a);let r=t({tag:"div",classList:["overlay"]});return r.append(c),r}()),document.querySelector("#p-form").addEventListener("submit",(function(t){t.preventDefault()})))}(e.id))}))}))};!function(){const a=document.querySelector("#container");[e(),s(),t({tag:"div",classList:["main-container"]})].forEach((t=>{a.appendChild(t)})),n()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,