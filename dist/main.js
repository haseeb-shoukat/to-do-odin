(()=>{"use strict";const t=function(t){let e=document.createElement(t.tag);if("attr"in t){let a=t.attr;for(let[t,s]of Object.entries(a))e.setAttribute(t,s)}return null!=t.classList&&e.classList.add(...t.classList),"text"in t&&(e.textContent=t.text),e},e=function(e){const s=Object.keys(localStorage).reverse(),c=document.querySelector(".project-items");c.innerHTML="",s.forEach((e=>{c.appendChild(t({tag:"div",classList:["project-item"],text:e}))})),a()},a=function(){const e=document.querySelectorAll(".side-item"),a=document.querySelector("#projects");let c=document.querySelector("#home");c.classList.add("selected"),e.forEach((t=>{t.addEventListener("click",(e=>{t!==c&&(c.classList.remove("selected"),t.classList.add("selected"),c=t)}))})),a.addEventListener("click",(e=>{document.querySelector(".overlay")||(container.appendChild(function(){const e=t({tag:"div",text:"Create New Project",classList:["p-form-heading"]}),a=t({tag:"input",attr:{type:"text",placeholder:"Project Name"},classList:["p-form-text"]}),s=t({tag:"div",classList:["p-form-buttons"]}),c=t({tag:"button",text:"Cancel",classList:["cancel-btn"]}),n=t({tag:"button",text:"Okay",classList:["submit-btn"]});c.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),s.append(c,n);const r=t({tag:"div",classList:["project-form"]});r.append(e,a,s);let i=t({tag:"div",classList:["overlay"]});return i.append(r),i}()),s())}))},s=function(){document.querySelector(".submit-btn").addEventListener("click",c)};function c(t){let a=document.querySelector(".p-form-text").value;""!==a?a.length>12?alert("Value too big"):(document.querySelector(".overlay").remove(),null===localStorage.getItem(a)?(localStorage.setItem(a,""),e()):alert("Project already exists.")):alert("Please enter a value")}const n=function(){let e=t({tag:"div",classList:["nav-bar"]});return e.append(t({tag:"i",classList:["fa","fa-tasks","fa-3x"],attr:{"aria-hidden":"true"}}),t({tag:"div",classList:["nav-heading"],text:"To-Do"}),t({tag:"div",classList:["nav-side"],text:"Tasks and Notes"})),e},r=function(){let e=t({tag:"div",classList:["side-bar"]});return e.append(i("home","Home"),i("briefcase","Projects"),i("sticky-note","Notes")),e},i=function(e,a){let s=t({tag:"div",attr:{id:a.toLowerCase()},classList:["side-item"]});if(s.append(t({tag:"i",classList:["fa",`fa-${e}`],attr:{"aria-hidden":"true"}}),t({tag:"span",text:a})),"Projects"===a){let e=t({tag:"div"});return e.append(s,t({tag:"div",classList:["project-items"]})),e}return s};!function(){const a=document.querySelector("#container");[n(),r(),t({tag:"div",classList:["main-container"]})].forEach((t=>{a.appendChild(t)})),e()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,