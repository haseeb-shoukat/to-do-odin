(()=>{"use strict";const t=function(t){let e=document.createElement(t.tag);if("attr"in t){let a=t.attr;for(let[t,n]of Object.entries(a))e.setAttribute(t,n)}return null!=t.classList&&e.classList.add(...t.classList),"text"in t&&(e.textContent=t.text),e},e=function(){const n=Object.keys(localStorage).reverse(),s=document.querySelector(".project-items");let i=document.querySelector(".selected");i=null===i||"Home"===i.id?"":i.textContent,s.innerHTML="",n.forEach((a=>{if("Home"===a)return;let n=t({tag:"div",classList:["project-item"]}),l=t({tag:"i",classList:["fa","fa-times","sm","remove-p-item"]}),r=t({tag:"div",classList:["project-name"],text:a});i===a&&r.classList.add("selected"),l.addEventListener("click",(t=>{localStorage.removeItem(a);let n=document.querySelector(".selected");n=n.textContent,n===a&&(document.querySelector(".main-container").innerHTML=""),e()})),n.append(r,l),s.appendChild(n)})),a()},a=function(){const e=document.querySelector("#projects"),a=document.querySelectorAll(".project-name"),i=document.querySelector("#home");i.addEventListener("click",n.bind(null,i)),a.forEach((t=>{t.addEventListener("click",n.bind(null,t))})),e.addEventListener("click",(e=>{document.querySelector(".overlay")||(container.appendChild(function(){const e=t({tag:"div",classList:["p-form-buttons"]}),a=t({tag:"button",text:"Cancel",classList:["cancel-btn"]});a.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),e.append(a,t({tag:"button",text:"Okay",classList:["submit-btn"]}));const n=t({tag:"div",classList:["project-form"]});n.append(t({tag:"div",text:"Create New Project",classList:["p-form-heading"]}),t({tag:"input",attr:{type:"text",placeholder:"Project Name"},classList:["p-form-text"]}),e);let s=t({tag:"div",classList:["overlay"]});return s.append(n),s}()),s())}))},n=function(t,e){let a=document.querySelector(".selected");t!==a&&(null!=a&&a.classList.remove("selected"),t.classList.add("selected"),"home"===t.id?l("Home"):l(t.textContent))},s=function(){document.querySelector(".submit-btn").addEventListener("click",i)};function i(t){let a=document.querySelector(".p-form-text").value;a=a.charAt(0).toUpperCase()+a.slice(1),""!==a?a.length>12?alert("Value too big"):(document.querySelector(".overlay").remove(),null===localStorage.getItem(a)?(localStorage.setItem(a,JSON.stringify([])),e()):alert("Project already exists.")):alert("Please enter a value")}const l=function(e){const a=document.querySelector(".main-container");let n=JSON.parse(localStorage.getItem(e));if(null===n)return void alert("Page does not exist.");a.innerHTML="";let s=t({tag:"div",classList:["header"]}),i=t({tag:"div",classList:["main-heading"],text:e}),l=t({tag:"button",text:"New Task",classList:["new-task-btn"]});l.addEventListener("click",d),s.append(i,l),a.appendChild(s),r(n,a),o(e,n)},r=function(e,a){a.appendChild(function(e){let a=t({tag:"div",class:"tasks-container"}),n="",s=0;return e.forEach((t=>{let e=t.priority,a="";a="low"===e?"task-blue":"medium"===e?"task-yellow":"task-red";const i=`<div id="${s}" class="${a} task">\n                        <div class="task-title">${t.title}</div>\n                        <div class="task-due-date">${t.dueDate}</div>\n                        <i class="fa fa-times sm remove-task"></i>\n                    </div>\n                    <div class="hidden">\n                        <div class="task-description">Details: ${t.description}</div>\n                        <div class="task-priority">Priority: ${t.priority}</div>\n                        <button class="edit-task">Edit Details</button>\n                    </div>`;n+=i,s+=1})),a.innerHTML=n,a}(e)),c()},o=function(t,e){document.querySelectorAll(".remove-task").forEach((a=>{a.addEventListener("click",(n=>{e.splice(parseInt(a.parentElement.id),1),localStorage.setItem(t,JSON.stringify(e)),l(t)}))}))},c=function(){var t,e=document.getElementsByClassName("task");for(t=0;t<e.length;t++)e[t].addEventListener("click",(function(){this.classList.toggle("active");var t=this.nextElementSibling;"block"===t.style.display?t.style.display="none":t.style.display="block"}))},d=function(){container.appendChild(function(){const e=t({tag:"div",classList:["t-form-buttons"]}),a=t({tag:"button",text:"Cancel",classList:["cancel-btn","b"]});a.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),e.append(a,t({tag:"button",text:"Create",attr:{for:"task-form"},classList:["t-submit-btn","b"]}));const n=t({tag:"div",classList:["task-form"]}),s=t({tag:"label",text:"Title:"});s.append(t({tag:"input",attr:{type:"text",required:"",name:"title"},classList:["t-title"]}));const i=t({tag:"label",text:"Description:"});i.append(t({tag:"textarea",attr:{rows:"4",name:"description"},classList:["t-description"]}));const l=t({tag:"label",classList:["m"]});l.innerHTML='Priority:\n   <input id="low" type="radio" name="priority" value="low" checked>\n   <label class="r" for="low">Low</label>\n   <input id="medium" type="radio" name="priority" value="medium">\n   <label class="r" for="medium">Medium</label>\n   <input id="high" type="radio" name="priority" value="high">\n   <label class="r" for="high">High</label>';const r=t({tag:"label",text:"Due Date:",classList:["m"]});r.append(t({tag:"input",attr:{type:"date",required:"",name:"dueDate"}}));const o=t({tag:"form",classList:["t-content"],attr:{id:"task-form",action:" ",method:"post"}});o.append(s,i,l,r,e),n.append(t({tag:"div",text:"Create a new task:",classList:["t-form-heading"]}),o);let c=t({tag:"div",classList:["overlay"]});return c.append(n),c}()),document.querySelector(".t-content").addEventListener("submit",(t=>{t.preventDefault(),document.querySelector(".overlay").remove();let e=document.querySelector(".selected");e="Home"===e.id?"Home":e.textContent;const a=localStorage.getItem(e),n=Object.fromEntries(new FormData(t.target).entries());if(null===a)return void alert("Project does not exist.");let s=JSON.parse(a);s.push(n),localStorage.setItem(e,JSON.stringify(s)),l(e)}))},u=function(){let e=t({tag:"div",classList:["nav-bar"]});return e.append(t({tag:"i",classList:["fa","fa-tasks","fa-3x"],attr:{"aria-hidden":"true"}}),t({tag:"div",classList:["nav-heading"],text:"To-Do"}),t({tag:"div",classList:["nav-side"],text:"Tasks and Notes"})),e},m=function(){let e=t({tag:"div",classList:["side-bar"]});return e.append(p("home","Home"),p("briefcase","Projects")),e},p=function(e,a){let n=t({tag:"div",attr:{id:a.toLowerCase()},classList:["side-item"]});if(n.append(t({tag:"i",classList:["fa",`fa-${e}`],attr:{"aria-hidden":"true"}}),t({tag:"span",text:a})),"Projects"===a){let e=t({tag:"div"});return e.append(n,t({tag:"div",classList:["project-items"]})),e}return n};!function(){const a=document.querySelector("#container");[u(),m(),t({tag:"div",classList:["main-container"]})].forEach((t=>{a.appendChild(t)})),document.querySelector("#home").classList.add("selected"),null===localStorage.getItem("Home")&&localStorage.setItem("Home",JSON.stringify([])),e(),l("Home")}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,