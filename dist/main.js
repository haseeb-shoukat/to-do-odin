(()=>{"use strict";const e=function(e){let t=document.createElement(e.tag);if("attr"in e){let a=e.attr;for(let[e,n]of Object.entries(a))t.setAttribute(e,n)}return null!=e.classList&&t.classList.add(...e.classList),"text"in e&&(t.textContent=e.text),t},t=function(){const n=Object.keys(localStorage).reverse(),s=document.querySelector(".project-items");let c=document.querySelector(".selected");c=null===c||"Home"===c.id?"":c.textContent,s.innerHTML="",n.forEach((a=>{if("Home"===a)return;let n=e({tag:"div",classList:["project-item"]}),o=e({tag:"i",classList:["fa","fa-times","sm","remove-p-item"]}),r=e({tag:"div",classList:["project-name"],text:a});c===a&&r.classList.add("selected"),o.addEventListener("click",(e=>{localStorage.removeItem(a);let n=document.querySelector(".selected");n=n.textContent,n===a&&(document.querySelector(".main-container").innerHTML=""),t()})),n.append(r,o),s.appendChild(n)})),a()},a=function(){const t=document.querySelector("#projects"),a=document.querySelectorAll(".project-name"),c=document.querySelector("#home");c.addEventListener("click",n.bind(null,c)),a.forEach((e=>{e.addEventListener("click",n.bind(null,e))})),t.addEventListener("click",(t=>{document.querySelector(".overlay")||(container.appendChild(function(){const t=e({tag:"div",text:"Create New Project",classList:["p-form-heading"]}),a=e({tag:"input",attr:{type:"text",placeholder:"Project Name"},classList:["p-form-text"]}),n=e({tag:"div",classList:["p-form-buttons"]}),s=e({tag:"button",text:"Cancel",classList:["cancel-btn"]}),c=e({tag:"button",text:"Okay",classList:["submit-btn"]});s.addEventListener("click",(e=>{document.querySelector(".overlay").remove()})),n.append(s,c);const o=e({tag:"div",classList:["project-form"]});o.append(t,a,n);let r=e({tag:"div",classList:["overlay"]});return r.append(o),r}()),s())}))},n=function(e,t){let a=document.querySelector(".selected");e!==a&&(null!=a&&a.classList.remove("selected"),e.classList.add("selected"),"home"===e.id?o("Home"):o(e.textContent))},s=function(){document.querySelector(".submit-btn").addEventListener("click",c)};function c(e){let a=document.querySelector(".p-form-text").value;a=a.charAt(0).toUpperCase()+a.slice(1),""!==a?a.length>12?alert("Value too big"):(document.querySelector(".overlay").remove(),null===localStorage.getItem(a)?(localStorage.setItem(a,""),t()):alert("Project already exists.")):alert("Please enter a value")}const o=function(t){const a=document.querySelector(".main-container");if(null===localStorage.getItem(t))return void alert("Page does not exist.");a.innerHTML="";let n=e({tag:"div",classList:["header"]}),s=e({tag:"div",classList:["main-heading"],text:t}),c=e({tag:"button",text:"New Task",classList:["new-task-btn"]});c.addEventListener("click",r),n.append(s,c),a.appendChild(n)},r=function(){console.log("works")},l=function(){let t=e({tag:"div",classList:["nav-bar"]});return t.append(e({tag:"i",classList:["fa","fa-tasks","fa-3x"],attr:{"aria-hidden":"true"}}),e({tag:"div",classList:["nav-heading"],text:"To-Do"}),e({tag:"div",classList:["nav-side"],text:"Tasks and Notes"})),t},i=function(){let t=e({tag:"div",classList:["side-bar"]});return t.append(d("home","Home"),d("briefcase","Projects")),t},d=function(t,a){let n=e({tag:"div",attr:{id:a.toLowerCase()},classList:["side-item"]});if(n.append(e({tag:"i",classList:["fa",`fa-${t}`],attr:{"aria-hidden":"true"}}),e({tag:"span",text:a})),"Projects"===a){let t=e({tag:"div"});return t.append(n,e({tag:"div",classList:["project-items"]})),t}return n};!function(){const a=document.querySelector("#container");[l(),i(),e({tag:"div",classList:["main-container"]})].forEach((e=>{a.appendChild(e)})),document.querySelector("#home").classList.add("selected"),null===localStorage.getItem("Home")&&localStorage.setItem("Home",""),t(),o("Home")}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,