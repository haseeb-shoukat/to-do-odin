(()=>{"use strict";const t=function(){const a=Object.keys(localStorage).reverse(),n=document.querySelector(".project-items");let s=document.querySelector(".selected");s=null===s||"Home"===s.id?"":s.textContent,n.innerHTML="",a.forEach((e=>{if("Home"===e)return;let a=m({tag:"div",classList:["project-item"]}),i=m({tag:"i",classList:["fa","fa-times","sm","remove-p-item"]}),r=m({tag:"div",classList:["project-name"],text:e});s===e&&r.classList.add("selected"),i.addEventListener("click",(a=>{localStorage.removeItem(e);let n=document.querySelector(".selected");n=n.textContent,n===e&&(document.querySelector(".main-container").innerHTML=""),t()})),a.append(r,i),n.appendChild(a)})),e()},e=function(){const t=document.querySelector("#projects"),e=document.querySelectorAll(".project-name"),s=document.querySelector("#home");s.addEventListener("click",a.bind(null,s)),e.forEach((t=>{t.addEventListener("click",a.bind(null,t))})),t.addEventListener("click",(t=>{document.querySelector(".overlay")||(container.appendChild(d()),n())}))},a=function(t,e){let a=document.querySelector(".selected");t!==a&&(null!=a&&a.classList.remove("selected"),t.classList.add("selected"),"home"===t.id?i("Home"):i(t.textContent))},n=function(){document.querySelector(".submit-btn").addEventListener("click",s)};function s(e){let a=document.querySelector(".p-form-text").value;a=a.charAt(0).toUpperCase()+a.slice(1),""!==a?a.length>12?alert("Value too big"):(document.querySelector(".overlay").remove(),null===localStorage.getItem(a)?(localStorage.setItem(a,JSON.stringify([])),t()):alert("Project already exists.")):alert("Please enter a value")}const i=function(t){const e=document.querySelector(".main-container");let a=JSON.parse(localStorage.getItem(t));if(null===a)return void alert("Page does not exist.");e.innerHTML="";let n=m({tag:"div",classList:["header"]}),s=m({tag:"div",classList:["main-heading"],text:t}),i=m({tag:"button",text:"New Task",classList:["new-task-btn"]});i.addEventListener("click",c),n.append(s,i),e.appendChild(n),r(a,e),o(t,a)},r=function(t,e){e.appendChild(p(t)),l()},o=function(t,e){document.querySelectorAll(".remove-task").forEach((a=>{a.addEventListener("click",(n=>{e.splice(parseInt(a.parentElement.id),1),localStorage.setItem(t,JSON.stringify(e)),i(t)}))}))},l=function(){var t,e=document.getElementsByClassName("task");for(t=0;t<e.length;t++)e[t].addEventListener("click",(function(){this.classList.toggle("active");var t=this.nextElementSibling;"block"===t.style.display?t.style.display="none":t.style.display="block"}))},c=function(){container.appendChild(u("Create")),document.querySelector(".t-content").addEventListener("submit",(t=>{t.preventDefault(),document.querySelector(".overlay").remove();let e=document.querySelector(".selected");e="Home"===e.id?"Home":e.textContent;const a=localStorage.getItem(e),n=Object.fromEntries(new FormData(t.target).entries());if(null===a)return void alert("Project does not exist.");let s=JSON.parse(a);s.push(n),localStorage.setItem(e,JSON.stringify(s)),i(e)}))},d=function(){const t=m({tag:"div",classList:["p-form-buttons"]}),e=m({tag:"button",text:"Cancel",classList:["cancel-btn"]});e.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),t.append(e,m({tag:"button",text:"Okay",classList:["submit-btn"]}));const a=m({tag:"div",classList:["project-form"]});a.append(m({tag:"div",text:"Create New Project",classList:["p-form-heading"]}),m({tag:"input",attr:{type:"text",placeholder:"Project Name"},classList:["p-form-text"]}),t);let n=m({tag:"div",classList:["overlay"]});return n.append(a),n},u=function(t){const e=m({tag:"div",classList:["t-form-buttons"]}),a=m({tag:"button",text:"Cancel",classList:["cancel-btn","b"]});a.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),e.append(a,m({tag:"button",text:t,attr:{for:"task-form"},classList:["t-submit-btn","b"]}));const n=m({tag:"div",classList:["task-form"]}),s=m({tag:"label",text:"Title:"});s.append(m({tag:"input",attr:{type:"text",required:"",name:"title"},classList:["t-title"]}));const i=m({tag:"label",text:"Description:"});i.append(m({tag:"textarea",attr:{rows:"4",name:"description"},classList:["t-description"]}));const r=m({tag:"label",classList:["m"]});r.innerHTML='Priority:\n   <input id="low" type="radio" name="priority" value="low" checked>\n   <label class="r" for="low">Low</label>\n   <input id="medium" type="radio" name="priority" value="medium">\n   <label class="r" for="medium">Medium</label>\n   <input id="high" type="radio" name="priority" value="high">\n   <label class="r" for="high">High</label>';const o=m({tag:"label",text:"Due Date:",classList:["m"]});o.append(m({tag:"input",attr:{type:"date",required:"",name:"dueDate"}}));const l=m({tag:"form",classList:["t-content"],attr:{id:"task-form",action:" ",method:"post"}});l.append(s,i,r,o,e),n.append(m({tag:"div",text:`${t} task`,classList:["t-form-heading"]}),l);let c=m({tag:"div",classList:["overlay"]});return c.append(n),c},m=function(t){let e=document.createElement(t.tag);if("attr"in t){let a=t.attr;for(let[t,n]of Object.entries(a))e.setAttribute(t,n)}return null!=t.classList&&e.classList.add(...t.classList),"text"in t&&(e.textContent=t.text),e},p=function(t){let e=m({tag:"div",class:"tasks-container"}),a=-1;return t.forEach((t=>{let n=t.priority,s="";a+=1,s="low"===n?"task-blue":"medium"===n?"task-yellow":"task-red";const r=m({tag:"div",classList:[s,"task"]});r.append(m({tag:"div",classList:["task-title"],text:t.title}),m({tag:"div",classList:["task-due-date"],text:t.dueDate}),m({tag:"i",classList:["fa","fa-times","sm","remove-task"]}));const o=m({tag:"div",classList:["hidden"]}),l=m({tag:"div",classList:["task-description"]});l.innerHTML=`<span class="bold">Details:</span> ${t.description}`;const c=m({tag:"div",classList:["task-priority"]});c.innerHTML=`<span class="bold">Priority:</span> ${t.priority}`;const d=m({tag:"button",classList:["edit-task"],text:"Edit Details"});d.addEventListener("click",(e=>{!function(t,e){document.querySelector(".overlay")||(document.querySelector("#container").appendChild(u("Edit")),document.querySelector(".t-title").value=t.title,document.querySelector(".t-description").value=t.description,document.querySelector(`#${t.priority}`).checked=!0,document.querySelector("[name = dueDate]").value=t.dueDate,document.querySelector(".task-form").addEventListener("submit",(a=>{a.preventDefault();let n=document.querySelector(".selected");n="Home"===n.id?"Home":n.textContent;const s=localStorage.getItem(n),r=Object.fromEntries(new FormData(a.target).entries());if(null===s)return void alert("Project does not exist.");if(JSON.stringify(r)===JSON.stringify(t))return void alert("No changes made");document.querySelector(".overlay").remove();let o=JSON.parse(s);o.splice(e,1,r),localStorage.setItem(n,JSON.stringify(o)),i(n)})))}(t,a)})),o.append(l,c,d),e.append(r,o)})),e},g=function(){let t=m({tag:"div",classList:["nav-bar"]});return t.append(m({tag:"i",classList:["fa","fa-tasks","fa-3x"],attr:{"aria-hidden":"true"}}),m({tag:"div",classList:["nav-heading"],text:"To-Do"}),m({tag:"div",classList:["nav-side"],text:"Tasks and Notes"})),t},v=function(){let t=m({tag:"div",classList:["side-bar"]});return t.append(f("home","Home"),f("briefcase","Projects")),t},f=function(t,e){let a=m({tag:"div",attr:{id:e.toLowerCase()},classList:["side-item"]});if(a.append(m({tag:"i",classList:["fa",`fa-${t}`],attr:{"aria-hidden":"true"}}),m({tag:"span",text:e})),"Projects"===e){let t=m({tag:"div"});return t.append(a,m({tag:"div",classList:["project-items"]})),t}return a};!function(){const e=document.querySelector("#container");[g(),v(),m({tag:"div",classList:["main-container"]})].forEach((t=>{e.appendChild(t)})),document.querySelector("#home").classList.add("selected"),null===localStorage.getItem("Home")&&localStorage.setItem("Home",JSON.stringify([])),t(),i("Home")}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,