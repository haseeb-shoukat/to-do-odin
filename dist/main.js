(()=>{"use strict";const t=function(t){let e=document.createElement(t.tag);if("attr"in t){let a=t.attr;for(let[t,n]of Object.entries(a))e.setAttribute(t,n)}return null!=t.classList&&e.classList.add(...t.classList),"text"in t&&(e.textContent=t.text),e},e=function(){const n=Object.keys(localStorage).reverse(),s=document.querySelector(".project-items");let i=document.querySelector(".selected");i=null===i||"Home"===i.id?"":i.textContent,s.innerHTML="",n.forEach((a=>{if("Home"===a)return;let n=t({tag:"div",classList:["project-item"]}),r=t({tag:"i",classList:["fa","fa-times","sm","remove-p-item"]}),o=t({tag:"div",classList:["project-name"],text:a});i===a&&o.classList.add("selected"),r.addEventListener("click",(t=>{localStorage.removeItem(a);let n=document.querySelector(".selected");n=n.textContent,n===a&&(document.querySelector(".main-container").innerHTML=""),e()})),n.append(o,r),s.appendChild(n)})),a()},a=function(){const e=document.querySelector("#projects"),a=document.querySelectorAll(".project-name"),i=document.querySelector("#home");i.addEventListener("click",n.bind(null,i)),a.forEach((t=>{t.addEventListener("click",n.bind(null,t))})),e.addEventListener("click",(e=>{document.querySelector(".overlay")||(container.appendChild(function(){const e=t({tag:"div",classList:["p-form-buttons"]}),a=t({tag:"button",text:"Cancel",classList:["cancel-btn"]});a.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),e.append(a,t({tag:"button",text:"Okay",classList:["submit-btn"]}));const n=t({tag:"div",classList:["project-form"]});n.append(t({tag:"div",text:"Create New Project",classList:["p-form-heading"]}),t({tag:"input",attr:{type:"text",placeholder:"Project Name"},classList:["p-form-text"]}),e);let s=t({tag:"div",classList:["overlay"]});return s.append(n),s}()),s())}))},n=function(t,e){let a=document.querySelector(".selected");t!==a&&(null!=a&&a.classList.remove("selected"),t.classList.add("selected"),"home"===t.id?r("Home"):r(t.textContent))},s=function(){document.querySelector(".submit-btn").addEventListener("click",i)};function i(t){let a=document.querySelector(".p-form-text").value;a=a.charAt(0).toUpperCase()+a.slice(1),""!==a?a.length>12?alert("Value too big"):(document.querySelector(".overlay").remove(),null===localStorage.getItem(a)?(localStorage.setItem(a,JSON.stringify([])),e()):alert("Project already exists.")):alert("Please enter a value")}const r=function(e){const a=document.querySelector(".main-container");if(null===localStorage.getItem(e))return void alert("Page does not exist.");a.innerHTML="";let n=t({tag:"div",classList:["header"]}),s=t({tag:"div",classList:["main-heading"],text:e}),i=t({tag:"button",text:"New Task",classList:["new-task-btn"]});i.addEventListener("click",o),n.append(s,i),a.appendChild(n)},o=function(){container.appendChild(function(){const e=t({tag:"div",classList:["t-form-buttons"]}),a=t({tag:"button",text:"Cancel",classList:["cancel-btn","b"]});a.addEventListener("click",(t=>{document.querySelector(".overlay").remove()})),e.append(a,t({tag:"button",text:"Create",attr:{for:"task-form"},classList:["t-submit-btn","b"]}));const n=t({tag:"div",classList:["task-form"]}),s=t({tag:"label",text:"Title:"});s.append(t({tag:"input",attr:{type:"text",required:"",name:"title"},classList:["t-title"]}));const i=t({tag:"label",text:"Description:"});i.append(t({tag:"textarea",attr:{rows:"4",name:"description"},classList:["t-description"]}));const r=t({tag:"label",classList:["m"]});r.innerHTML='Priority:\n   <input id="low" type="radio" name="priority" value="low" checked>\n   <label class="r" for="low">Low</label>\n   <input id="medium" type="radio" name="priority" value="medium">\n   <label class="r" for="medium">Medium</label>\n   <input id="high" type="radio" name="priority" value="high">\n   <label class="r" for="high">High</label>';const o=t({tag:"label",text:"Due Date:",classList:["m"]});o.append(t({tag:"input",attr:{type:"date",required:"",name:"dueDate"}}));const l=t({tag:"form",classList:["t-content"],attr:{id:"task-form",action:" ",method:"post"}});l.append(s,i,r,o,e),n.append(t({tag:"div",text:"Create a new task:",classList:["t-form-heading"]}),l);let c=t({tag:"div",classList:["overlay"]});return c.append(n),c}()),document.querySelector(".t-content").addEventListener("submit",(t=>{t.preventDefault(),document.querySelector(".overlay").remove();let e=document.querySelector(".selected");e="Home"===e.id?"Home":e.textContent;const a=localStorage.getItem(e),n=Object.fromEntries(new FormData(t.target).entries());if(null===a)return void alert("Project does not exist.");let s=JSON.parse(a);s.push(n),localStorage.setItem(e,JSON.stringify(s))}))},l=function(){let e=t({tag:"div",classList:["nav-bar"]});return e.append(t({tag:"i",classList:["fa","fa-tasks","fa-3x"],attr:{"aria-hidden":"true"}}),t({tag:"div",classList:["nav-heading"],text:"To-Do"}),t({tag:"div",classList:["nav-side"],text:"Tasks and Notes"})),e},c=function(){let e=t({tag:"div",classList:["side-bar"]});return e.append(d("home","Home"),d("briefcase","Projects")),e},d=function(e,a){let n=t({tag:"div",attr:{id:a.toLowerCase()},classList:["side-item"]});if(n.append(t({tag:"i",classList:["fa",`fa-${e}`],attr:{"aria-hidden":"true"}}),t({tag:"span",text:a})),"Projects"===a){let e=t({tag:"div"});return e.append(n,t({tag:"div",classList:["project-items"]})),e}return n};!function(){const a=document.querySelector("#container");[l(),c(),t({tag:"div",classList:["main-container"]})].forEach((t=>{a.appendChild(t)})),document.querySelector("#home").classList.add("selected"),null===localStorage.getItem("Home")&&localStorage.setItem("Home",JSON.stringify([])),e(),r("Home")}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,